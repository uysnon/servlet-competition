url = jdbc:oracle:thin:@localhost:1522/XEPDB1
user = vasya
password = 123

query.user.select.byId = SELECT ID, ROLE_ID, STATUS_ID, LOGIN, PASSWORD, NAME FROM USER_ WHERE ID = ?
query.user.select.byLogin =  SELECT ID, ROLE_ID, STATUS_ID, LOGIN, PASSWORD, NAME FROM USER_ WHERE LOGIN = ?
query.user.select.all = SELECT ID, ROLE_ID, STATUS_ID, LOGIN, PASSWORD, NAME FROM USER_
query.user.select.allByStatus = SELECT ID, ROLE_ID, STATUS_ID, LOGIN, PASSWORD, NAME FROM USER_ WHERE STATUS_ID = ?
query.user.select.allByRole = SELECT ID, ROLE_ID, STATUS_ID, LOGIN, PASSWORD, NAME FROM USER_ WHERE ROLE_ID = ?

query.user.update.statusByLogin = UPDATE USER_ SET STATUS_ID = ? WHERE LOGIN = ?
query.user.create = INSERT INTO USER_ (LOGIN, PASSWORD, NAME, ROLE_ID, STATUS_ID) VALUES (?, ?, ?, ?, 1)
query.user.countWithLogin = SELECT COUNT(*) FROM USER_ WHERE LOGIN = ?

query.competition.selectExpertsByCompetitionId = SELECT USER_.ID, USER_.ROLE_ID, USER_.STATUS_ID, USER_.LOGIN, USER_.PASSWORD, USER_.NAME FROM COMPETITION_EVALUATION INNER JOIN COMPETITION on COMPETITION_EVALUATION.COMPETITION_ID = COMPETITION.ID INNER JOIN USER_ on COMPETITION_EVALUATION.USER_ID = USER_.ID WHERE COMPETITION.ID = ?
query.competition.select.all = SELECT ID, TASK, STRATEGY_ID, STRATEGY_VALUE, END_REGISTRATION_DATE, END_SENDING_ANSWER_DATE FROM COMPETITION
query.competition.select.byId = SELECT ID, TASK, STRATEGY_ID, STRATEGY_VALUE, END_REGISTRATION_DATE, END_SENDING_ANSWER_DATE FROM COMPETITION WHERE ID = ?
query.competition.select.active = SELECT ID, TASK, STRATEGY_ID, STRATEGY_VALUE, END_REGISTRATION_DATE, END_SENDING_ANSWER_DATE FROM COMPETITION WHERE END_REGISTRATION_DATE > current_timestamp
query.competition.select.archived = SELECT ID, TASK, STRATEGY_ID, STRATEGY_VALUE, END_REGISTRATION_DATE, END_SENDING_ANSWER_DATE FROM COMPETITION WHERE END_REGISTRATION_DATE <= current_timestamp
query.competition.add = INSERT INTO COMPETITION(TASK, STRATEGY_ID, STRATEGY_VALUE, END_REGISTRATION_DATE, END_SENDING_ANSWER_DATE) VALUES (?, ?, ?, ?, ?)
qeury.competition.selectMaxId = SELECT MAX(ID) FROM COMPETITION

query.competitionEvaluation.add =  INSERT INTO COMPETITION_EVALUATION(COMPETITION_ID, USER_ID) VALUES (?, ?)


query.competitionParticipation.select.usersFromCompetition = SELECT U.ID, ROLE_ID, STATUS_ID, LOGIN, PASSWORD, NAME FROM COMPETITION_PARTICIPATION INNER JOIN USER_ U on U.ID = COMPETITION_PARTICIPATION.USER_ID WHERE COMPETITION_ID = ?
query.competitionParticipation.insert.empty INSERT INTO COMPETITION_PARTICIPATION(USER_ID, COMPETITION_ID, MARK_ID) VALUES (?, ?, 1)


query.competitionParticipation.insert.answer = UPDATE COMPETITION_PARTICIPATION SET ANSWER = ? WHERE ID = ?
query.competitionParticipation.select.byId SELECT ID, USER_ID, COMPETITION_ID, MARK_ID, ANSWER FROM COMPETITION_PARTICIPATION WHERE ID = ?
query.competitionParticipation.select.byUserAndCompetition = SELECT ID, USER_ID, COMPETITION_ID, MARK_ID, ANSWER FROM COMPETITION_PARTICIPATION WHERE USER_ID = ? AND COMPETITION_ID = ?
query.competitionParticipation.select.countByUserAndCompetition = SELECT COUNT(*) AS COUNT FROM COMPETITION_PARTICIPATION WHERE USER_ID = ? AND COMPETITION_ID = ?
query.competitionParticipation.select.byCompetitionId = SELECT ID, USER_ID, COMPETITION_ID, MARK_ID, ANSWER FROM COMPETITION_PARTICIPATION WHERE COMPETITION_ID = ?
query.competitionParticipation.add = INSERT INTO COMPETITION_PARTICIPATION (USER_ID, COMPETITION_ID, MARK_ID, ANSWER) VALUES (?, ?, 1, '')
#query.competitionParticipation.select.needToVerifyByExpertId = SELECT CP.ID, CP.USER_ID, CP.COMPETITION_ID, CP.MARK_ID, CP.ANSWER FROM COMPETITION_EVALUATION INNER JOIN COMPETITION_PARTICIPATION CP on COMPETITION_EVALUATION.COMPETITION_ID = CP.COMPETITION_ID WHERE  COMPETITION_EVALUATION.USER_ID = ? AND CP.ID NOT IN (SELECT COMPETITION_PARTICIPATION_ID FROM DECISION WHERE DECISION.USER_ID = ?)
query.competitionParticipation.select.needToVerifyByExpertId = SELECT CP.ID, CP.USER_ID, CP.COMPETITION_ID, CP.MARK_ID, CP.ANSWER FROM COMPETITION INNER JOIN COMPETITION_PARTICIPATION CP on COMPETITION.ID = CP.COMPETITION_ID INNER JOIN COMPETITION_EVALUATION CE on COMPETITION.ID = CE.COMPETITION_ID WHERE CE.USER_ID = ? AND CP.ANSWER IS NOT NULL AND CP.ID NOT IN (SELECT P.ID FROM DECISION INNER JOIN COMPETITION_PARTICIPATION P on P.ID = DECISION.COMPETITION_PARTICIPATION_ID WHERE DECISION.USER_ID = ?)
query.competitionParticipation.select.byParticipantId  = SELECT ID, USER_ID, COMPETITION_ID, MARK_ID, ANSWER FROM COMPETITION_PARTICIPATION WHERE USER_ID = ?
query.competitionParticipation.updateMark = UPDATE COMPETITION_PARTICIPATION SET MARK_ID = ? WHERE ID = ?

query.decision.getAll = SELECT ID, MARK_ID, USER_ID, COMPETITION_PARTICIPATION_ID, COMMENT_ FROM DECISION
query.decision.select.byId = SELECT ID, MARK_ID, USER_ID, COMPETITION_PARTICIPATION_ID, COMMENT_ FROM DECISION WHERE ID = ?
query.decision.byExpertId = SELECT ID, MARK_ID, USER_ID, COMPETITION_PARTICIPATION_ID, COMMENT_ FROM DECISION WHERE USER_ID = ?
query.decision.byCompetitionId = SELECT DECISION.ID, DECISION.MARK_ID, DECISION.USER_ID, COMPETITION_PARTICIPATION_ID, COMMENT_ FROM DECISION INNER JOIN COMPETITION_PARTICIPATION CP on CP.ID = DECISION.COMPETITION_PARTICIPATION_ID WHERE COMPETITION_ID = ?
query.decision.insert = INSERT INTO DECISION(USER_ID, COMPETITION_PARTICIPATION_ID, MARK_ID, COMMENT_) VALUES (?, ?, ?, ?)
query.decision.select.byCompetitionIdAndParticipantId = SELECT DECISION.ID, DECISION.MARK_ID, DECISION.USER_ID, DECISION.COMPETITION_PARTICIPATION_ID, DECISION.COMMENT_ FROM DECISION INNER JOIN COMPETITION_PARTICIPATION CP on CP.ID = DECISION.COMPETITION_PARTICIPATION_ID WHERE CP.ID = ?
query.decision.select.countByExpertAndParticipationId = SELECT COUNT(*) AS COUNT FROM DECISION WHERE USER_ID = ? AND COMPETITION_PARTICIPATION_ID = ?